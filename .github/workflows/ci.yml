name: CI - Test Pull Requests

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20, 22]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Run complete game test
        run: npm run test:complete-game

      - name: Test CLI execution
        run: |
          echo "Testing CLI execution..."
          # Quick smoke test
          timeout 10s node dist/swordfight.js || echo "CLI smoke test completed (expected timeout)"

      - name: Run all tests
        run: |
          echo "Running comprehensive test suite..."
          npm run test:all

      - name: Verify package integrity
        run: |
          echo "Verifying package can be packed..."
          npm pack --dry-run
          echo "✅ Package integrity verified"

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check package.json format
        run: |
          echo "Checking package.json formatting..."
          node -e "JSON.parse(require('fs').readFileSync('package.json', 'utf8'))"
          echo "✅ package.json is valid JSON"

      - name: Verify build outputs
        run: |
          npm run build
          if [ ! -f "dist/swordfight.js" ]; then
            echo "❌ Build output missing: dist/swordfight.js"
            exit 1
          fi
          echo "✅ Build outputs verified"

      - name: Check for required files
        run: |
          echo "Checking for required files..."
          test -f "README.md" || (echo "❌ README.md missing" && exit 1)
          test -f "package.json" || (echo "❌ package.json missing" && exit 1)
          test -f "bin/swordfight.js" || (echo "❌ bin/swordfight.js missing" && exit 1)
          echo "✅ All required files present"
